function [y1] = myNeuralNetworkFunctionForY2(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 07-Dec-2014 01:58:38.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 1xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = 0;
  x1_step1_gain = 2.23979491819022;
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-4.9504356157923075;2.300137719801115;1.6482635116427409;-5.1765719590774291;7.6732154086798321];
  IW1_1 = [7.408080821277319;-9.5273658961986847;-9.2403196907199714;-7.8808136683449437;6.3200576716798018];
  
  % Layer 2
  b2 = -0.16087630566837835;
  LW2_1 = [0.23065101769605584 1.0602371821398326 -1.0478406948292185 -0.44363393471144674 -0.19752181671614191];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 71.50667696695;
  y1_step1_xoffset = 0.314474104720724;
  
  % ===== SIMULATION ========
  
  % Dimensions
  Q = size(x1,2); % samples
  
  % Input 1
  xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
  
  % Layer 1
  a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
  
  % Layer 2
  a2 = repmat(b2,1,Q) + LW2_1*a1;
  
  % Output 1
  y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
